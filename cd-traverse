#!/bin/bash
# Ancestor/descendant traversal | Spencer Tipping
# Licensed under the terms of the MIT source code license

cd_on '^\.\.[^/]'    cd_traverse_ancestor
cd_on '^\.\.[0-9]+$' cd_traverse_ancestor_n
cd_on '^\*\*'        cd_traverse_descendant

function cd_traverse_ancestor_n {
  local n=${1#..}
  local p=$(yes ../ | head -n $n | tr -d '\n')
  test -n $p && cd_goto $p
}

function cd_traverse_ancestor {
  local pattern="${1#..}[^/]*$"
  local target=$PWD

  while test "$PWD" != / ; do
    builtin cd ..
    if [[ "${PWD##*/}" =~ $pattern ]] ; then
      target=$PWD
      break
    fi
  done
  cd_goto "$target"

  if test $OLDPWD = / ; then
    echo "cd: no ancestor matches '${1#..}'"
    return 1
  fi
}

function cd_traverse_descendant {
  echo "cd: searching for descendants named '${1#\*\*}'..."

  local name=${1#\*\*}
  if [[ "${name%/}" != "$name" ]]; then
    local dir_constraint='-type d'
  fi

  local destination=$(find . -name "$name" $dir_constraint -print -quit)
  if [[ -n "$destination" ]]; then
    if [[ -d "$destination" ]]; then
      cd_goto "$destination"
    else
      cd_goto "${destination%/*}"
    fi
  else
    echo "cd: no descendant matches '${1#\*\*}'"
    return 1
  fi
}
